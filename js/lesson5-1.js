// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculate(a, b, operation), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–≤–∞ —á–∏—Å–ª–∞ —ñ —Ñ—É–Ω–∫—Ü—ñ—é-–∫–æ–ª–±–µ–∫
// operation, —â–æ –≤–∏–∫–æ–Ω—É—î –ø–µ–≤–Ω—É –¥—ñ—é (–¥–æ–¥–∞–≤–∞–Ω–Ω—è, –º–Ω–æ–∂–µ–Ω–Ω—è —Ç–æ—â–æ).
// –§—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ–≤–Ω–æ—ó –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω–æ—ó –¥—ñ—ó

// function count(x, y) {
//   return x + y;
// }

// function calculate(a, b, operation) {
//   return operation(a, b);
// }

// console.log(calculate(12, 10, count));
// =======================

// console.log(
//   calculate(3, 5, function (a, b) {
//     return a * b;
//   })
// );
// ======================
// * –ù–∞–ø–∏—à–∏ –¥–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
// letMeSeeYourName(callback) - –∑–∞–ø–∏—Ç—É—î —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
//—á–µ—Ä–µ–∑ prompt —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–ª–∏–∫—É callback-—Ñ—É–Ω–∫—Ü—ñ—ó
//greet(name) - –∫–æ–ª–ª–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î —ñ–º'—è —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ "–ü—Ä–∏–≤—ñ—Ç, <name>"
//–†–µ–∞–ª—ñ–∑—É–π –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ prompt –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π (—è–∫—â–æ —Ç–∞–∫ - –ø–æ–≤–µ—Ä—Ç–∞–π –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "Error")

// function greet(name) {
//   return `–ü—Ä–∏–≤—ñ—Ç, ${name}`;
// }

// function letMeSeeYourName(callback) {
//   const userName = prompt("Enter your name");

//   if (!userName) {
//     return "Error";
//   }

//   return callback(userName);
// }

// console.log(letMeSeeYourName(greet));
//
// * ===
//–ù–∞–ø–∏—à—ñ—Ç—å –¥–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
//makeProduct(name, price, callback) - –ø—Ä–∏–π–º–∞—î
//—ñ–º'—è —Ç–∞ —Ü—ñ–Ω—É —Ç–æ–≤–∞—Ä—É, –∞ —Ç–∞–∫–æ–∂ callback.
//–§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π
//—ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä id —ñ –≤–∏–∫–ª–∏–∫–∞—î callback
//–ü–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.
//showProduct(product) - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–π–º–∞—é—á–∏–π –æ–±'—î–∫—Ç
//–ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—Ä—É—é—â–∏–π –π–æ–≥–æ —É –∫–æ–Ω—Å–æ–ª—å

// function showProduct(product) {
//   console.log(product);
// }

// function makeProduct(name, price, callback) {
//   const product = {
//     name,
//     price,
//     id: Math.random(),
//   };
//   callback(product);
// }

// makeProduct("Bread", 120, showProduct);
// makeProduct("Water", 110, showProduct);
// makeProduct("Oil", 10, showProduct);

// =======================================
// *–ó—Ä–æ–±–∏—Ç–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä—ñ–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—É (–∑ —è–≤–Ω–∏–º —ñ –Ω–µ—è–≤–Ω–∏–º –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º)
// function add(a, b, c) {
//   return a + b + c;
// }

// const add = (a, b, c) => {
//   return a + b + c;
// };
// console.log(add(1, 4, 6));

// ! ===============================

// const add1 = (a, b, c) => a + b + c;

// console.log(add1(12, 11, 4));
// ================================================

// const showName = (userName) => ({ name: userName });

// console.log(showName("Oleg"));

// =============================================

//? ForEach –Ω—ñ—á–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞—î

// const numbers = [1, 4, 5, 6, 7, 9];

// numbers.forEach((el, index, array) => {
//   console.log(el);
//   console.log(index);
//   console.log(array);
// });

//------------------------------------------------------------
//  * –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.

// function logItems(items) {
//     for (let i = 0; i < items.length; i += 1) {
//       console.log(`${i + 1} - ${items[i]}`);
//     }
//   }

// const logItems = (items) => {
//   items.forEach((el, i) => {
//     console.log(`${i + 1} - ${el}`);
//   });
// };

// logItems(["Mango", "Poly", "Ajax"]);
// console.log("");
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);

//------------------------------------------------------------

/**
 * –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 * –î–æ–¥–∞–π –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ –∞—Ä–≥—É–º–µ–Ω—Ç - —Ü–µ —á–∏—Å–ª–æ
 */
// function calculateAverage(...args) {
//     let total = 0;
//     for (let i = 0; i < args.length; i++) {
//       total += args[i];
//     }
//     return total / args.length;
//   }

// const calculateAverage = (...args) => {
//   let total = 0;
//   let counter = 0;
//   args.forEach((el) => {
//     if (typeof el === "number") {
//       total += el;
//       counter += 1;
//     }
//   });
//   return total / counter || 0;
// };

// console.log(calculateAverage(1, 2, 3, 4)); // 2.5
// console.log(calculateAverage(14, 8, 2)); // 8
// console.log(calculateAverage(14, 8, "a", 2)); // 8
// console.log(calculateAverage("qwe", false)); // 0

//------------------------------------------------------------

//? Map –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ç—ñ—î—ó –∂ –¥–æ–≤–∂–∏–Ω–∏: –Ω–µ –∑–º—ñ–Ω—é—î –æ—Ä–∏–≥—ñ–Ω–∞–ª

//  * –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getModels –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–æ–¥–µ–ª–µ–π (–ø–æ–ª–µ model) –≤—Å—ñ—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤.

// const getModels = (array) => {
//   return array.map((el) => {
//     return el.model;
//   });
// };

//! –¶–µ —Ñ—É–Ω–∫—Ü—ñ—è
// const getModels = (array) => array.map((el) => el.model);

// console.log(getModels(allCars));

//! –¶–µ –º–∞—Å–∏–≤
// const getModels = allCars.map((el) => el.model);

// console.log(getModels);

//! –¶–µ —Ñ—É–Ω–∫—Ü—ñ—è
// const getRandomValues = (arr, prop) => {
//   //   if (!arr[0][prop]) {
//   //     return "No such property";
//   //   }

//   if (!arr[0].hasOwnProperty(prop)) {
//     return "No such property";
//   }
//   return arr.map((el) => {
//     return el[prop];
//   });
// };

// console.log(getRandomValues(allCars, "amount"));

// console.log(getRandomValues(allCars, "model"));

//------------------------------------------------------------

/**
 * –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è makeCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —ñ–∑ –∑–º—ñ–Ω–Ω–∏–º
 * –∑–Ω–∞—á–µ–Ω–Ω—è–º –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–µ—Ä–µ–¥–∞–Ω–æ—ó –∑–Ω–∏–∂–∫–∏.
 */

// const makeCarsWithDiscount = (array, discount) => {
//   return array.map((el) => {
//     return { ...el, price: el.price - el.price * discount };
//   });
// };

// console.table(makeCarsWithDiscount(allCars, 0.2));
// console.table(makeCarsWithDiscount(allCars, 0.4));
// console.log([1, 2, 3, 4, 5].map(() => {}));

const allCars = [
  { make: "Honda", model: "CR-V", amount: 14, price: 24045 },
  { make: "Honda", model: "Accord", amount: 2, price: 22455 },
  { make: "Mazda", model: "Mazda 6", amount: 8, price: 24195 },
  { make: "Mazda", model: "CX-9", amount: 7, price: 31520 },
  { make: "Toyota", model: "4Runner", amount: 19, price: 34210 },
  { make: "Toyota", model: "Sequoia", amount: 16, price: 45560 },
  { make: "Toyota", model: "Tacoma", amount: 4, price: 24320 },
  { make: "Ford", model: "F-150", amount: 11, price: 27110 },
  { make: "Ford", model: "Fusion", amount: 13, price: 22120 },
  { make: "Ford", model: "Explorer", amount: 6, price: 31660 },
];

const data = [
  { id: "000", name: "Alex", gender: "male", likes: 5, tags: ["js", "nodejs"] },
  {
    id: "001",
    name: "Kate",
    gender: "female",
    likes: 2,
    tags: ["html", "css"],
  },
  {
    id: "002",
    name: "Maria",
    gender: "female",
    likes: 17,
    tags: ["html", "js", "nodejs"],
  },
  {
    id: "003",
    name: "Borys",
    gender: "male",
    likes: 8,
    tags: ["css", "react"],
  },
  {
    id: "004",
    name: "Jhon",
    gender: "male",
    likes: 0,
    tags: ["js", "nodejs", "react"],
  },
  {
    id: "005",
    name: "Anna",
    gender: "female",
    likes: 0,
    tags: ["js", "nodejs", "react"],
  },
  {
    id: "006",
    name: "Jhon",
    gender: "male",
    likes: 0,
    tags: ["js", "nodejs", "react"],
  },
];

console.log(
  data.map((el) => {
    return el.tags;
  })
);

console.log(
  data.flatMap((el) => {
    return el.tags;
  })
);
